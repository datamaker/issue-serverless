service: issue-serverless-rest-api

frameworkVersion: ">=1.1.0 <2.0.0"

plugins:
  - serverless-domain-manager

custom:
  customDomain:
    domainName: serverless.arteight.co.kr
    basePath: v1
    stage: ${self:provider.stage}
    createRoute53Record: true

provider:
  name: aws
  runtime: nodejs6.10
  region: ap-northeast-2
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    DYNAMODB_TABLE_COMMENT: ${self:service}-${opt:stage, self:provider.stage}-comment
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_COMMENT}"

functions:
  createIssue:
    handler: issue/create.create
    events:
      - http:
          path: issue
          method: post
          cors: true

  listIssue:
    handler: issue/list.list
    events:
      - http:
          path: issue
          method: get
          cors: true

  getIssue:
    handler: issue/get.get
    events:
      - http:
          path: issue/{id}
          method: get
          cors: true

  updateIssue:
    handler: issue/update.update
    events:
      - http:
          path: issue/{id}
          method: put
          cors: true

  deleteIssue:
    handler: issue/delete.delete
    events:
      - http:
          path: issue/{id}
          method: delete
          cors: true

  create:
    handler: comment/create.create
    events:
      - http:
          path: comment
          method: post
          cors: true

  list:
    handler: comment/list.list
    events:
      - http:
          path: comment
          method: get
          cors: true

  get:
    handler: comment/get.get
    events:
      - http:
          path: comment/{id}
          method: get
          cors: true

  update:
    handler: comment/update.update
    events:
      - http:
          path: comment/{id}
          method: put
          cors: true

  delete:
    handler: comment/delete.delete
    events:
      - http:
          path: comment/{id}
          method: delete
          cors: true

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
    TodosDynamoDbTable1:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE_COMMENT}        

